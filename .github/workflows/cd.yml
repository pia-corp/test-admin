name: CD

on:
  pull_request:
    branches:
      - main
    types:
      - closed

# # env:
# #   AWS_REGION: ${{ vars.AWS_REGION }}
# #   SYSTEM: ${{ vars.SYSTEM }}
# #   DEV_AWS_ACCOUNT_ID: ${{ secrets.DEV_AWS_ACCOUNT_ID }}
# #   PROD_AWS_ACCOUNT_ID: ${{ secrets.PROD_AWS_ACCOUNT_ID }}

permissions:
  contents: read
  id-token: write
  pull-requests: write
  actions: read

jobs:
  Clone:
    runs-on: ubuntu-latest
    env:
      RELEASE_BRANCH_NAME: ${{ github.run_id }}

    steps:
      - uses: actions/checkout@v4

      - name: Set Git configuration
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create new branch
        run: |
          git checkout -b release/github_${{ env.RELEASE_BRANCH_NAME }}

      - name: Clone
        run: |
          git clone https://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@github.com/pia-corp/test-admin_submoduleB
          git clone https://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@github.com/pia-corp/test-admin_submoduleA

      - name: Update submodules
        run: git submodule update --init --recursive

      # out フォルダを作成し、public フォルダ内のすべてのファイルをコピー
      - name: Copy Files
        run: |
          mkdir -p out
          mkdir -p out/test-admin_submoduleB
          cp -R test-admin_submoduleB/* out/test-admin_submoduleB/

      # 結果確認のため、outフォルダの内容を表示
      - name: Display out folder content
        run: |
          echo "Contents of out folder:"
          ls -la out/test-admin_submoduleB

      - name: Commit existing changes
        id: commit_status
        run: |
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Commit existing changes for PR"
            echo "changed_files=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit"
            echo "changed_files=false" >> $GITHUB_OUTPUT
          fi

      - name: Push new branch
        if: steps.commit_status.outputs.changed_files == 'true'
        run: |
          git push -u origin release/github_${{ env.RELEASE_BRANCH_NAME }}

      - name: Create PR
        if: steps.commit_status.outputs.changed_files == 'true'
        run: |
          gh pr create --fill
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Auto-merge PR
        if: steps.commit_status.outputs.changed_files == 'true'
        run: gh pr merge --auto --merge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




#   Build:
#     runs-on: ubuntu-latest
#     timeout-minutes: 5

#     steps:
#       - name: Checkout the repository
#         uses: actions/checkout@v4
#         with:
#           submodules: recursive
#           token: ${{ secrets.GITHUB_TOKEN }}

#       - name: Update submodules
#         id: update
#         run: git submodule update --remote --recursive

#       # - name: Create new branch
#       #   run: |
#       #     git checkout -b release/github_${{ env.RELEASE_BRANCH_NAME }}

#       # - name: Setup Node.js
#       #   uses: actions/setup-node@v4
#       #   with:
#       #     cache: npm
#       #     node-version: "23.2.0"

#       # - uses: actions/cache@v4
#       #   id: cache
#       #   with:
#       #     path: node_modules
#       #     key: ${{ runner.arch }}-${{ runner.os }}-node-${{ steps.setup_node.outputs.node-version }}-npm-${{ hashFiles('**/package-lock.json') }}
#       #     restore-keys: |
#       #       ${{ runner.arch }}-${{ runner.os }}-node-${{ steps.setup_node.outputs.node-version }}-npm-

#       # - name: Install dependencies
#       #   if: steps.cache.outputs.cache-hit != 'true'
#       #   run: npm ci --no-audit --progress=false --silent

#       # out フォルダを作成し、public フォルダ内のすべてのファイルをコピー
#       - name: Copy Files
#         run: |
#           mkdir -p out
#           cp -R test-admin_submoduleA/**/* out/

#       # 結果確認のため、outフォルダの内容を表示
#       - name: Display out folder content
#         run: |
#           echo "Contents of out folder:"
#           ls -la out

#       # - name: include sitemap
#       #   uses: ./.github/workflow/_create_sitemap
