# name: Pull Request

# on:
#   pull_request:
#     branches:
#       - main
#     types:
#       - opened

# jobs:
#   CheckChangesPub:
#     runs-on: ubuntu-latest
#     outputs:
#       public_changed: ${{ env.public_changed }}
#     steps:
#       - uses: actions/checkout@v4.1.6
#         name: checkout "${{ github.base_ref }}"
#         with:
#           fetch-depth: 1
#           ref: ${{ github.base_ref }}

#       - uses: actions/checkout@v4.1.6
#         name: checkout "${{ github.head_ref }}"
#         with:
#           fetch-depth: 1
#           ref: ${{ github.head_ref}}

#       - name: check_diff
#         shell: bash
#         run: |
#           files=$(git diff --name-only origin/${{ github.base_ref }} origin/${{ github.head_ref }} -- public/)
#           if [ -n "$files" ]; then
#             echo "public_changed=true" >> $GITHUB_ENV
#           else
#             echo "public_changed=false" >> $GITHUB_ENV
#           fi

#   Setup:
#     needs: CheckChangesPub
#     if: github.event.sender.type != 'Bot' && contains(github.head_ref, 'develop') && needs.CheckChangesPub.outputs.public_changed == 'true'
#     runs-on: ubuntu-latest
#     timeout-minutes: 5
#     permissions:
#       contents: read

#     steps:
#       - name: Checkout the repository
#         uses: actions/checkout@v4.1.6

#       - name: Setup Node.js
#         uses: actions/setup-node@v4.0.2
#         with:
#           node-version: "23.2.0"
#           cache: npm

#       - name: Restore npm dependencies
#         id: cache-npm
#         uses: actions/cache@v4.0.2
#         env:
#           cache-name: cache-node-modules
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-build-${{ env.cache-name }}-v23.2.0-${{ hashFiles('**/package-lock.json') }}

#       - name: Install npm dependencies (if cache miss)
#         if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
#         run: npm ci --no-audit --progress=false --silent

#   OpeningAnnounce:
#     needs: Setup
#     runs-on: ubuntu-latest
#     timeout-minutes: 2

#     permissions:
#       pull-requests: write

#     steps:
#       - name: Set up opening announce
#         id: opening_announce
#         run: |
#           lf='\n'
#           message="@${{ github.event.pull_request.user.login }} さん、プルリクエストを受け付けました！ :tada:"
#           message+="${lf}${lf}コード検収は下記の手順で行ってください。"
#           message+="${lf}コードオーナーは承認前にチェックを通過していることを確認してください。"
#           message+="${lf}    - \`linter\`に合格しなかった場合は、原因を特定して修正してください。"
#           message+="${lf}    - HTMLのMarkupルールは[ドキュメント](../blob/main/doc/markup_rule.md)を確認してください。"
#           message+="${lf}    - Lighthouseは1ファイルのチェックに30秒〜60秒かかります。可能な限りローカルで検証してからプルリクを出してください。"
#           message+="${lf}    - 🔴：**修正必須**、🟠：**必要に応じて修正**、🟢：**問題なし** です。"
#           message+="${lf}    - コードオーナーから\`approve\`された後に、\`main\`ブランチにマージします。"
#           echo "message=${message}" >> $GITHUB_OUTPUT

#       - name: Comment opening announce
#         uses: actions/github-script@v7.0.1
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           script: |
#             const params = {
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               issue_number: context.payload.pull_request.number,
#               body: '${{ steps.opening_announce.outputs.message }}'
#             }
#             await github.rest.issues.createComment(params)
