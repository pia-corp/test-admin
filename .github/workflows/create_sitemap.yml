name: サイトマップ生成

on:
  workflow_call:
    inputs:
      repository:
        description: "Repository name"
        required: true
        type: string
      repository_no_register:
        description: "Alternative repository name if provided"
        required: false
        type: string
      branch_name:
        description: "Branch name to commit changes"
        required: false
        type: string
    secrets:
      GITHUB_TOKEN_VALUE:
        description: "GitHub Token"
        required: true
permissions:
  contents: read
  id-token: write
  pull-requests: write
  actions: read

jobs:
  sitemap:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      REPOSITORY: ${{ inputs.repository_no_register != '' && inputs.repository_no_register || inputs.repository }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.branch_name }}

      - name: Checkout branch
        run: |
          git checkout ${{ inputs.branch_name }}

      - name: Update submodules
        run: git submodule update --init --remote ${{env.REPOSITORY}}
        env:
          GITHUB_TOKEN_VALUE: ${{ secrets.GITHUB_TOKEN_VALUE }}

      # out フォルダを作成し、public フォルダ内のすべてのファイルをコピー
      - name: Copy Files
        run: |
          mkdir -p out
          mkdir -p out/${{ env.REPOSITORY }}
          if [ -d "./${{ env.REPOSITORY }}/public" ]; then
            cp -R ./${{ env.REPOSITORY }}/public/* out/${{ env.REPOSITORY }}/
          else
            echo "Error: ./${{ env.REPOSITORY }}/public directory does not exist."
            exit 1
          fi

      # 結果確認のため、outフォルダの内容を表示
      - name: Display out folder content
        run: |
          echo "Contents of out folder:"
          ls -la out/${{ env.REPOSITORY }}

      - name: Create sitemap
        run: |
          if [ ! -d "./${{ env.REPOSITORY }}" ]; then
            echo "Error: ./out/${{ env.REPOSITORY }} directory does not exist."
            exit 1
          fi

          files=$(find ./out/${{ env.REPOSITORY }} -type f -name '*.html')

          echo '<?xml version="1.0" encoding="UTF-8"?>' > sitemap.xml
          echo '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> sitemap.xml

          for file in $files; do
            relative_path=${file#./out/${{ env.REPOSITORY }}/}
            url="https://${{ env.REPOSITORY }}/$relative_path"
            lastmod=$(stat -c %y "$file" | TZ=Asia/Tokyo git log -1 --format="%ci" -- "$file")

            echo '  <url>' >> sitemap.xml
            echo "    <loc>$url</loc>" >> sitemap.xml
            echo "    <lastmod>$lastmod</lastmod>" >> sitemap.xml
            echo '  </url>' >> sitemap.xml
          done

          echo '</urlset>' >> sitemap.xml

      - name: Commit changes
        id: commit
        run: |
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Automatically update sitemap"
            echo "changed_files=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit"
            echo "changed_files=false" >> $GITHUB_OUTPUT
          fi
          git push -u origin ${{ inputs.branch_name }}
