name: Create sitemap

on:
  workflow_call:
    inputs:
      repository:
        description: "Repository name"
        required: true
        type: string
      repository_no_register:
        description: "Alternative repository name if provided"
        required: false
        type: string
      branch_name:
        description: "Branch name to commit changes"
        required: true
        type: string
    secrets:
      GITHUB_TOKEN_VALUE:
        description: "GitHub Token"
        required: true

permissions:
  contents: write

jobs:
  sitemap:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      REPOSITORY: ${{ inputs.repository_no_register && inputs.repository || inputs.repository }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.branch_name }}

      - name: Set Git configuration
        run: |
          git config --global user.name ${{ vars.USERNAME }}
          git config --global user.email ${{ vars.MAILADDRESS }}
          git config --global url."https://${{ secrets.GITHUB_TOKEN_VALUE }}@github.com/".insteadOf "https://github.com/"

      - name: Update submodules
        run: git clone https://github.com/pia-corp/${{env.REPOSITORY}} --recursive
        env:
          GITHUB_TOKEN_VALUE: ${{ secrets.GITHUB_TOKEN_VALUE }}

      - name: Copy Files
        run: |
          mkdir -p out
          mkdir -p out/${{ env.REPOSITORY }}
          if [ -d "./${{ env.REPOSITORY }}/public" ]; then
            cp -R ./${{ env.REPOSITORY }}/public/* out/${{ env.REPOSITORY }}/
          else
            echo "Error: ./${{ env.REPOSITORY }}/public directory does not exist."
            exit 1
          fi

      - name: Display out folder content
        run: |
          echo "outフォルダの内容:"
          ls -la out/${{ env.REPOSITORY }}

      - name: Create sitemap
        run: |
          if [ ! -d "./${{ env.REPOSITORY }}/public" ]; then
            echo "エラー: ./${{ env.REPOSITORY }}/public ディレクトリが存在しません。"
            exit 1
          fi

          files=$(find ./${{ env.REPOSITORY }}/public -type f -name '*.html')

          echo '<?xml version="1.0" encoding="UTF-8"?>' > out/${{ env.REPOSITORY }}/sitemap.xml
          echo '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> out/${{ env.REPOSITORY }}/sitemap.xml

          for file in $files; do
            relative_path=${file#./${{ env.REPOSITORY }}/pinlic/}
            url="https://${{ env.REPOSITORY }}/$relative_path"
            lastmod=$(stat -c %y "$file" | TZ=Asia/Tokyo git log -1 --format="%ci" -- "$file")

            echo '  <url>' >> out/${{ env.REPOSITORY }}/sitemap.xml
            echo "    <loc>$url</loc>" >> out/${{ env.REPOSITORY }}/sitemap.xml
            echo "    <lastmod>$lastmod</lastmod>" >> out/${{ env.REPOSITORY }}/sitemap.xml
            echo '  </url>' >> out/${{ env.REPOSITORY }}/sitemap.xml
          done

          echo '</urlset>' >> out/${{ env.REPOSITORY }}/sitemap.xml

      - name: Checkout branch
        run: |
          git checkout ${{ inputs.branch_name }}

      - name: Commit changes
        id: commit
        run: |
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Automatically update sitemap"
          else
            echo "No changes to commit"
          fi
          git push -u origin ${{ inputs.branch_name }}
