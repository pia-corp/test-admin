name: タグ生成

on:
  workflow_call:

jobs:
  CreateTag:
    needs: Build
    runs-on: ubuntu-24.04
    timeout-minutes: 2

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4.1.6

      - name: Get previous tag
        id: pre_tag
        run: |
          echo "pre_tag=$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)" >> $GITHUB_ENV

      - name: Generate release tag major version
        if: needs.build.outputs.changed_files == 'true'
        run: |
          today=$(date +'%Y.%m.%d')
          pre_release_date=$(echo "${{ env.pre_tag }}" | awk -F'-' '{print $1}')
          pre_release_count=$(echo "${{ env.pre_tag }}" | awk -F'-' '{print $2}')
          if [[ ! $pre_release_date = $today ]]; then
            echo "init count"
            pre_release_count=0
          fi
          release_ver=$(awk "BEGIN {printf \"%.1f\", $pre_release_count + 1}")
          echo "release_tag__major=$today-$release_ver" >> $GITHUB_ENV

      - name: Generate release tag minor vertion
        if: needs.build.outputs.changed_files == 'false'
        run: |
          today=$(date +'%Y.%m.%d')
          pre_release_date=$(echo "${{ env.pre_tag }}" | awk -F'-' '{print $1}')
          pre_release_count=$(echo "${{ env.pre_tag }}" | awk -F'-' '{print $2}')
          if [[ ! $pre_release_date = $today ]]; then
            echo "init count"
            pre_release_count=0
          fi
          release_ver=$(awk "BEGIN {printf \"%.1f\", $pre_release_count + 0.01}")
          echo "release_tag__minor=$today-$release_ver" >> $GITHUB_ENV

      - name: Generate release note
        id: release_note
        run: |
          release_note=$(curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/generate-notes \
            -d "{\"tag_name\":\"${{ env.release_tag__minor || env.release_tag__major }}\", \"previous_tag_name\":\"${{ env.pre_tag }}\"}" | jq .body | sed 's/"//g')
          echo "release_note=$release_note" >> $GITHUB_ENV

      - name: Create Release
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{ \"tag_name\": \"${{ env.release_tag__minor || env.release_tag__major }}\", \"name\": \"${{ env.release_tag__minor || env.release_tag__major }}\", \"body\": \"${{ env.release_tag__minor || env.release_tag__major }}}\"}" \
            https://api.github.com/repos/${{ github.repository }}/releases
