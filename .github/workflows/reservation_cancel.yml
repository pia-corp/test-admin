name: 04.公開予約キャンセル

on:
  workflow_dispatch:
    inputs:
      repository:
        type: choice
        description: "対象ブランド"
        required: true
        options:
          - "topards.jp"
          - "feliamo.jp"
          - "molak.jp"
          - "ns-collection.jp"
          - "lilmoon.jp"
          - "minette-lens.jp"
          - "mirage-c.jp"
          - "mimuco.jp"
          - "harne.jp"
          - "louer.jp"
          - "lumieu.jp"
          - "puuuuchu.jp"
          - "melady.jp"
          - "melloew.jp"
          - "faloom.jp"
          - "mimicharme.jp"
          - "lensbe.jp"
          - "clainel.jp"
          - "chapun.jp"
          - "resay.jp"
          - "michou.jp"
      repository_no_register:
        description: "任意のブランドリポジトリ"
        default: ""
      reservation:
        type: boolean
        description: 予約キャンセル実施の確認
        default: false

jobs:
  CANCEL_RESERVATION:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    env:
      REPOSITORY: ${{ inputs.repository_no_register != '' && inputs.repository_no_register || inputs.repository }}

    steps:
      - name: CronJobリストを取得
        run: |
          response=$(curl -X GET \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer ${{ secrets.CRON_JOB_TOKEN }}' \
              https://api.cron-job.org/jobs)
          echo "Data from API: $response"
          echo "$response" > data.json

      - name: ジョブIDを抽出
        run: |
          JOB_ID=$(jq -r '.jobs[] | select(.title == "${{ env.REPOSITORY }}") | .jobId' data.json)
          echo "Job ID: $JOB_ID"
          echo "job_id=$JOB_ID" >> $GITHUB_ENV

      - name: 予約状況を抽出
        run: |
          # jq を使って ドメイン のデータを抽出
          Enabled=$(jq -r '.jobs[] | select(.title == "${{ env.REPOSITORY }}") | .enabled' data.json)

          # 抽出した値を表示
          echo "ENABLED_BEFORE = $Enabled" >> $GITHUB_ENV

      - name: CronJobのアイテムを更新
        env:
          month: ${{ inputs.month }}
          day: ${{ inputs.day }}
          hour: ${{ inputs.hour }}
          minutes: ${{ inputs.minutes }}
        run: |
          curl -X PATCH \
            -H 'Content-Type: application/json' \
            -H "Authorization: Bearer ${{ secrets.CRON_JOB_TOKEN_VALUE }}" \
            -d "{
              \"job\": {
                \"enabled\": false
              }
            }" \
            https://api.cron-job.org/jobs/${{ env.job_id }}

      - name: CronJobリストを取得
        run: |
          response=$(curl -X GET \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer ${{ secrets.CRON_JOB_TOKEN_VALUE }}' \
              https://api.cron-job.org/jobs)
          echo "Data from API: $response"
          echo "$response" > data.json

      - name: ジョブ情報を抽出
        run: |
          # jq を使って ドメイン のデータを抽出
          Enabled=$(jq -r '.jobs[] | select(.title == "${{ env.REPOSITORY }}") | .enabled' data.json)
          Hours=$(jq -r '.jobs[] | select(.title == "${{ env.REPOSITORY }}") | .schedule.hours | @csv' data.json)
          MDays=$(jq -r '.jobs[] | select(.title == "${{ env.REPOSITORY }}") | .schedule.mdays | @csv' data.json)
          Minutes=$(jq -r '.jobs[] | select(.title == "${{ env.REPOSITORY }}") | .schedule.minutes | @csv' data.json)
          Months=$(jq -r '.jobs[] | select(.title == "${{ env.REPOSITORY }}") | .schedule.months | @csv' data.json)
          timezone=$(jq -r '.jobs[] | select(.title == "${{ env.REPOSITORY }}") | .schedule.timezone' data.json)

          # 抽出した値を表示
          echo "ENABLED_AFTER: $Enabled" >> $GITHUB_ENV
          echo "Hours: $hours" >> $GITHUB_ENV
          echo "MDays: $mdays" >> $GITHUB_ENV
          echo "Minutes: $minutes" >> $GITHUB_ENV
          echo "Months: $months" >> $GITHUB_ENV
          echo "Timezone: $timezone" >> $GITHUB_ENV

      - name: 結果の表示
        run: |
          # GitHubステップサマリーに情報を追加
          {
            echo "# 予約状況の更新結果"
            echo "| リポジトリ | 予約日時 | ステータス |"
            echo "| -- | -- | -- |"
            echo "| ${{ env.REPOSITORY }} | ${{ env.Timezone }} ${{ env.Months }}月${{ env.MDays }}日${{ env.Hours }}時${{ env.Minutes }}分 | ${{ env.ENABLED_BEFORE }} -> ${{ env.ENABLED_AFTER }} |"
            echo "予約状況を直接確認する場合は以下のサイトへアクセスしてください。"
            echo "https://cron-job.org/en/"
          } >> $GITHUB_STEP_SUMMARY
