name: Update Submodules

on:
  workflow_call:
    inputs:
      repository:
        description: "Repository name"
        required: true
        type: string
      repository_no_register:
        description: "Alternative repository name if provided"
        required: false
        type: string
      branch_name:
        description: "Branch name to commit changes"
        required: true
        type: string
    secrets:
      GITHUB_TOKEN_VALUE:
        description: "GitHub Token"
        required: true

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      REPOSITORY: ${{ inputs.repository_no_register && inputs.repository || inputs.repository }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Git configuration
        run: |
          git config --global user.name ${{ vars.USERNAME }}
          git config --global user.email ${{ vars.MAILADDRESS }}
          git config --global url."https://${{ secrets.GITHUB_TOKEN_VALUE }}@github.com/".insteadOf "https://github.com/"

      - name: Check if submodule exists
        run: |
          if git config --file .gitmodules --name-only --get-regexp path | grep -q "^submodule\.$REPOSITORY\.path$"; then
            echo "Submodule exists"
            echo "submodule_exists=true" >> $GITHUB_ENV
          else
            echo "::notice:: サブモジュールの更新情報は存在しません"
            echo "submodule_exists=false" >> $GITHUB_ENV
          fi

      - name: Add submodule if not exists
        if: env.submodule_exists == 'false'
        run: |
          git submodule add https://github.com/pia-corp/${{ env.REPOSITORY }} ${{ env.REPOSITORY }}
          git submodule update --init --remote

      - name: Update submodules
        if: env.submodule_exists == 'true'
        run: git submodule update --init --remote ${{env.REPOSITORY}}
        env:
          GITHUB_TOKEN_VALUE: ${{ secrets.GITHUB_TOKEN_VALUE }}

      - name: Checkout branch
        run: |
          git checkout ${{ inputs.branch_name }}

      - name: Commit changes HEAD（最新コミット）とステージングエリアの差分があるか確認します。
        run: |
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Automatically update submodules"
            git push -u origin ${{ inputs.branch_name }}
          else
            echo "No changes in submodules"
          fi
