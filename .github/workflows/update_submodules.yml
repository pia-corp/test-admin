name: Update Submodules

on:
  workflow_call:
    inputs:
      repository:
        description: "Repository name"
        required: true
        type: string
      repository_no_register:
        description: "Alternative repository name if provided"
        required: false
        type: string
      branch_name:
        description: "Branch name to commit changes"
        required: true
        type: string
    secrets:
      GITHUB_TOKEN_VALUE:
        description: "GitHub Token"
        required: true

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      REPOSITORY: ${{ inputs.repository_no_register && inputs.repository_no_register || inputs.repository }}

    outputs:
      changed_files: ${{ steps.check_changes.outputs.commit_exits }}

    steps:
      - name: Check if the user is authorized
        env:
          USER_LOGIN: ${{ github.actor }}
          CODE_OWNERS: ${{ vars.CODE_OWNERS }}
        run: |
          echo "$USER_LOGIN が許可されたリストに含まれているか確認しています..."
          if ! echo "$CODE_OWNERS" | grep -q -w "$USER_LOGIN"; then
            echo "ユーザー $USER_LOGIN はこのワークフローを実行する権限がありません。"
            exit 1
          fi
          echo "ユーザー $USER_LOGIN は認証されました。続行します..."

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Git configuration
        run: |
          git config --global user.name ${{ vars.USERNAME }}
          git config --global user.email ${{ vars.MAILADDRESS }}
          git config --global url."https://${{ secrets.GITHUB_TOKEN_VALUE }}@github.com/".insteadOf "https://github.com/"

      - name: Check if submodule exists
        id: check_submodule
        run: |
          if git config --file .gitmodules --name-only --get-regexp path | grep -q "^submodule\.$REPOSITORY\.path$"; then
            echo "Submodule exists"
            echo "submodule_exists=true" >> $GITHUB_ENV
          else
            echo "Submodule does not exist"
            echo "submodule_exists=false" >> $GITHUB_ENV
          fi

      - name: Add submodule if not exists
        if: env.submodule_exists == 'false'
        run: |
          git submodule add https://github.com/pia-corp/${{ env.REPOSITORY }} ${{ env.REPOSITORY }}
          git submodule update --init --remote

      - name: Update submodules
        if: env.submodule_exists == 'true'
        run: git submodule update --init --remote ${{env.REPOSITORY}}
        env:
          GITHUB_TOKEN_VALUE: ${{ secrets.GITHUB_TOKEN_VALUE }}

      - name: Checkout branch
        run: |
          git checkout ${{ inputs.branch_name }}

      - name: Commit changes HEAD（最新コミット）とステージングエリアの差分があるか確認します。
        id: commit
        run: |
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Automatically update submodules"
            echo "commit_exits=true" >> $GITHUB_ENV
          else
            echo "commit_exits=false" >> $GITHUB_ENV
          fi
          git push -u origin ${{ inputs.branch_name }}

      - name: Delete branch
        if: env.commit_exits == 'false'
        run: |
          git push origin --delete ${{ inputs.branch_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_VALUE }}
