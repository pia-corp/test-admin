name: Submodules Update

on:
  workflow_call:
    inputs:
      repository:
        description: "Repository name"
        required: true
        type: string
      repository_no_register:
        description: "Alternative repository name if provided"
        required: false
        type: string
    secrets:
      GITHUB_TOKEN:
        description: "GitHub Token"
        required: true
  workflow_dispatch:
    inputs:
      repository:
        type: choice
        description: "Target Submodules"
        required: true
        options:
          - "topards.jp"
          - "feliamo.jp"
          - "molak.jp"
          - "ns-collection.jp"
          - "lilmoon.jp"
          - "minette-lens.jp"
          - "mirage-c.jp"
          - "mimuco.jp"
          - "harne.jp"
          - "louer.jp"
          - "lumieu.jp"
          - "puuuuchu.jp"
          - "melady.jp"
          - "melloew.jp"
          - "faloom.jp"
          - "mimicharme.jp"
          - "lensbe.jp"
          - "clainel.jp"
          - "chapun.jp"
          - "resay.jp"
          - "michou.jp"
      repository_no_register:
        description: "対象ブランド（未登録）"
        default: ""

permissions:
  contents: write
  pull-requests: write

jobs:
  Upload:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      RELEASE_BRANCH_NAME: "${{ github.run_id }}"
      REPOSITORY: ${{ inputs.repository_no_register && inputs.repository_no_register || inputs.repository }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Git configuration
        run: |
          git config --global user.name ${{ vars.USERNAME }}
          git config --global user.email ${{ vars.MAILADDRESS }}
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Update submodules
        run: git submodule update --init --remote ${{env.REPOSITORY}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new branch
        run: |
          git checkout -b release/github_${{ env.RELEASE_BRANCH_NAME }}

      - name: Commit and push changes
        id: commit
        run: |
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Automatically update submodules"
            echo "changed_files=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit"
            echo "changed_files=false" >> $GITHUB_OUTPUT
          fi
          git push -u origin release/github_${{ env.RELEASE_BRANCH_NAME }}

      - name: Create PR
        if: ${{ steps.commit.outputs.changed_files == 'true' }}
        run: |
          gh pr create --fill
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Auto-merge PR
        if: ${{ steps.commit.outputs.changed_files == 'true' }}
        run: gh pr merge --auto --merge
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
