name: 02.手動ファイルアップロード

on:
  workflow_dispatch:
    inputs:
      repository:
        description: "対象ブランド"
        type: choice
        required: true
        options:
          - "topards.jp"
          - "feliamo.jp"
          - "molak.jp"
          - "ns-collection.jp"
          - "lilmoon.jp"
          - "minette-lens.jp"
          - "mirage-c.jp"
          - "mimuco.jp"
          - "harne.jp"
          - "louer.jp"
          - "lumieu.jp"
          - "puuuuchu.jp"
          - "melady.jp"
          - "melloew.jp"
          - "faloom.jp"
          - "mimicharme.jp"
          - "lensbe.jp"
          - "clainel.jp"
          - "chapun.jp"
          - "resay.jp"
          - "michou.jp"
      repository_no_register:
        description: "任意のブランドリポジトリ"
        required: false
        type: string
      target:
        description: アップロード先
        type: choice
        required: true
        options:
          - "検証環境"
          - "本番環境"
      sync:
        description: "※検証環境はfullアップロードのみ"
        type: choice
        required: true
        options:
          - "full"
          - "delta"

jobs:
  upload:
    name: Upload Files
    if: needs.auth.outputs.is_authorized == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: ${{ needs.auth.outputs.selected_repo }}
          fetch-depth: 0

      - name: Set environment variables
        id: set_env
        run: |
          echo "HOST=${{ vars.HOST }}" >> $GITHUB_ENV
          echo "PORT=${{ vars.PORT }}" >> $GITHUB_ENV
          echo "USER_NAME=${{ vars.USER_NAME }}" >> $GITHUB_ENV

          if [ "${{ github.event.inputs.target }}" == "dev" ]; then
            echo "Setting up for development environment"
            echo "TARGET_PATH=${{ vars.DEVELOPMENT_REMOTE_PATH }}" >> $GITHUB_ENV
            echo "ENVIRONMENT=開発環境" >> $GITHUB_ENV
          else
            echo "Setting up for production environment"
            echo "TARGET_PATH=${{ vars.PRODUCTION_REMOTE_PATH }}" >> $GITHUB_ENV
            echo "ENVIRONMENT=本番環境" >> $GITHUB_ENV
          fi

      - name: Install lftp
        run: |
          sudo apt-get update
          sudo apt-get install -y lftp

      - name: Upload to Production (SFTP)
        if: github.event.inputs.target == 'prod'
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

          if [ "${{ github.event.inputs.sync }}" == "full" ]; then
            # Full sync - mirror the entire directory
            lftp -e "set sftp:auto-confirm yes; \
                    open -u ${{ env.USER_NAME }},${{ secrets.PASSWORD }} sftp://${{ env.HOST }}:${{ env.PORT }}; \
                    mirror -R --delete --verbose ./ ${{ env.TARGET_PATH }}; \
                    bye"
          else
            # Delta sync - only upload changed files
            lftp -e "set sftp:auto-confirm yes; \
                    open -u ${{ env.USER_NAME }},${{ secrets.PASSWORD }} sftp://${{ env.HOST }}:${{ env.PORT }}; \
                    mirror -R --verbose ./ ${{ env.TARGET_PATH }}; \
                    bye"
          fi

          echo "ファイルを ${{ env.ENVIRONMENT }} へアップロードしました。" >> $GITHUB_STEP_SUMMARY
          echo "リポジトリ: ${{ needs.auth.outputs.selected_repo }}" >> $GITHUB_STEP_SUMMARY
          echo "同期方法: ${{ github.event.inputs.sync }}" >> $GITHUB_STEP_SUMMARY

      - name: Upload to Development (FTP)
        if: github.event.inputs.target == 'dev'
        run: |
          if [ "${{ github.event.inputs.sync }}" == "full" ]; then
            # Full sync - mirror the entire directory
            lftp -e "set ftp:ssl-allow no; \
                    open -u ${{ env.USER_NAME }},${{ secrets.PASSWORD }} ${{ env.HOST }}:${{ env.PORT }}; \
                    mirror -R --delete --verbose ./ ${{ env.TARGET_PATH }}; \
                    bye"
          else
            # Delta sync - only upload changed files
            lftp -e "set ftp:ssl-allow no; \
                    open -u ${{ env.USER_NAME }},${{ secrets.PASSWORD }} ${{ env.HOST }}:${{ env.PORT }}; \
                    mirror -R --verbose ./ ${{ env.TARGET_PATH }}; \
                    bye"
          fi

          echo "ファイルを ${{ env.ENVIRONMENT }} へアップロードしました。" >> $GITHUB_STEP_SUMMARY
          echo "リポジトリ: ${{ needs.auth.outputs.selected_repo }}" >> $GITHUB_STEP_SUMMARY
          echo "同期方法: ${{ github.event.inputs.sync }}" >> $GITHUB_STEP_SUMMARY
